create database Info;
use info;
CREATE TABLE PROGRAMMER
(
    NAME VARCHAR(8) NOT NULL,
    DOB DATE NOT NULL,
    DOJ DATE NOT NULL,
    SEX varchar(2), 
    PROF1 VARCHAR(8),
    PROF2 VARCHAR(8),
    SALARY INT NOT NULL
);
insert into programmer values('somdutt','1966-04-21','1999-08-23','m','pascal','basic',3000);
insert into programmer values('Alice', '1985-04-12', '2010-05-01', 'F', 'Java', 'SQL', 7000);
insert into programmer values('Bob', '1990-11-23', '2012-03-15', 'M', 'C++', 'C', 6500);
insert into programmer values('Carol', '1988-07-19', '2013-08-24', 'F', 'Python', 'Java', 7200);
insert into programmer values('Dave', '1982-02-10', '2008-09-17', 'M', 'pascal', 'Pascal', 8000);
insert into programmer values('Eve', '1995-09-30', '2017-11-20', 'F', 'JS', 'HTML', 6800);
insert into programmer values('Frank', '1980-12-05', '2005-08-12', 'M', 'pascal', 'MySQL', 7500);
insert into programmer values('Grace', '1993-03-22', '2016-06-10', 'F', 'pascal', 'Rails', 7100);

select * from programmer;
CREATE TABLE SOFTWARE
(
    NAME VARCHAR(8) NOT NULL,
    TITLE VARCHAR(20) NOT NULL,
    DEV_IN VARCHAR(8) NOT NULL,
    SCOST DOUBLE(5,2),
    DCOST INT,
    SOLD INT
);
insert into SOFTWARE values('somdutt','parachutes','basic',390.95, 6000, 43);
insert into SOFTWARE values('Alice', 'System Tool', 'Java', 150.00, 5000, 300);
insert into SOFTWARE values('Bob', 'Web Application', 'Python', 200.00, 7000, 150);
insert into SOFTWARE values('Carol', 'Database Manager', 'C++', 250.00, 10000, 200);
insert into SOFTWARE values('Dave', 'Network Tool', 'C', 120.00, 4000, 250);
insert into SOFTWARE values('Eve', 'System Tool', 'JS', 180.00, 6000, 180);
insert into SOFTWARE values('Frank', 'E-commerce Platform', 'PHP', 220.00, 8000, 220);
insert into SOFTWARE values('Grace', 'Blog Site', 'Ruby', 160.00, 5500, 175);
SELECT *FROM SOFTWARE;
CREATE TABLE STUDIES
(
    NAME VARCHAR(8) NOT NULL,
    SPLACE VARCHAR(9) NOT NULL,
    COURSE VARCHAR(5) NOT NULL,
    CCOST INT NOT NULL
);

insert into STUDIES values('somdutt','sabhari','pgdca',4500);
insert into STUDIES values('Alice', 'TechInst', 'DB101', 3000);
insert into STUDIES values('Bob', 'UnivXYZ', 'CS201', 4000);
insert into STUDIES values('Carol', 'OnlineU', 'DCS', 2000);
insert into STUDIES values('Dave', 'TechInst', 'RDBMS', 3500);
insert into STUDIES values('Eve', 'SkillEd', 'pgdca', 2800);
insert into STUDIES values('Frank', 'UniTech', 'CS201', 3200);
insert into STUDIES values('Grace', 'OnlineU', 'DCS', 2500);
SELECT *FROM STUDIES;


-- QUERIES - I
-- 1
SELECT AVG(SCOST) AS SellingCostAverage FROM SOFTWARE WHERE DEV_IN = 'pascal';
-- 2
SELECT NAME, TIMESTAMPDIFF(YEAR, DOB, CURDATE()) AS Age
FROM PROGRAMMER;

-- 3 
SELECT P.NAME, TIMESTAMPDIFF(year, P.DOB, CURDATE()) AS age
FROM PROGRAMMER p
JOIN STUDIES S ON P.NAME=S.NAME WHERE S.COURSE='DCS';

-- 4
SELECT MAX(SOLD) AS MaxCopiesSOLD
FROM SOFTWARE;

-- 5
SELECT NAME, DOB
FROM PROGRAMMER
WHERE MONTH(DOB)=1;

-- 6 
SELECT MIN(CCOST) AS MinCourseCost
FROM STUDIES;

-- 7
SELECT COUNT(*) AS PGDCA_Count -- * INDICATES THAT IT COUNTS ALL ROW, REGARDLESS OF NULL VALUES IN ANY COLUMN
FROM STUDIES
WHERE COURSE = 'PGDCA';

-- 8
SELECT SUM(SCOST * SOLD) AS Total_Revenue
FROM SOFTWARE
WHERE DEV_IN = 'C';

-- 9
SELECT * FROM SOFTWARE WHERE NAME='EVE';

-- 10
SELECT COUNT(*) AS Sabhari_Count
FROM STUDIES WHERE SPLACE='SABHARI';

-- 11
SELECT * FROM SOFTWARE WHERE (SOLD*SCOST) > 30000;

-- 12
SELECT NAME, TITLE, CEIL(DCOST/SCOST) AS NoOfCopiesNeeded FROM SOFTWARE;

-- 13
SELECT MAX(SCOST) AS MAXCOST FROM SOFTWARE WHERE DEV_IN='BASIC';

-- 14 
SELECT * FROM SOFTWARE WHERE (DCOST/SCOST) <= SOLD;

-- 15
SELECT COUNT(*) AS DBASE_COUNT FROM SOFTWARE WHERE DEV_IN='DBASE';

-- 16
SELECT COUNT(*) AS STUDIED_IN_PRAGATHI FROM STUDIES WHERE SPLACE='PRAGATHI';

-- 17 
SELECT COUNT(*) AS CourseFeeRangeCount FROM STUDIES 
WHERE CCOST BETWEEN 5000 AND 10000;

-- 18
SELECT AVG(CCOST) AS AverageCourseCost
FROM STUDIES;

-- 19
SELECT *FROM PROGRAMMER
WHERE PROF1='C' OR PROF2='C';

-- 20
SELECT COUNT(*)  FROM PROGRAMMER
WHERE PROF1='COBOL' OR PROF2='PASACAL' OR PROF1='PASCAL' OR 'COBOL';

-- 21
SELECT COUNT(*) AS NoPascalCount FROM PROGRAMMER
WHERE PROF1 NOT IN('PASCAL','C') AND PROF2 NOT IN('PASCAL','C');

-- 22
SELECT MAX(TIMESTAMPDIFF(YEAR,DOB,CURDATE())) AS OldestMaleProgrammerAge FROM PROGRAMMER
WHERE SEX='M';

-- 23
SELECT AVG(TIMESTAMPDIFF(YEAR,DOB,CURDATE())) AS AverageAgeOfFeamleProgrammer FROM PROGRAMMER
WHERE SEX='F';

-- 24 
SELECT NAME,TIMESTAMPDIFF(YEAR,DOJ,CURDATE()) AS Experience FROM PROGRAMMER ORDER BY NAME DESC;

-- 25
SELECT NAME FROM PROGRAMMER WHERE MONTH(DOB) = MONTH(CURDATE());

-- 26
SELECT COUNT(*) AS NoOfFemaleProgrammer FROM PROGRAMMER WHERE SEX='F';

-- 27
SELECT DISTINCT LANGUAGE FROM (
   SELECT PROF1 AS LANGUAGE FROM PROGRAMMER WHERE SEX='M'
   UNION
   SELECT PROF2 AS LANGUAGE FROM PROGRAMMER WHERE SEX='M'
) AS KnownLanguageByMale ;

-- 28
SELECT AVG(SALARY) AS AverageSalary FROM PROGRAMMER ;

-- 29
SELECT COUNT(*) FROM PROGRAMMER WHERE SALARY BETWEEN 2000 AND 4000;

-- 30
SELECT * FROM PROGRAMMER WHERE PROF1 NOT IN('CLIPPER','COBOL','PASCAL') AND PROF2 NOT IN('CLIPPER','COBOL','PASCAL');

-- 31
SELECT COUNT(*) AS C_KnownFemaleProgrammer 
FROM PROGRAMMER 
WHERE TIMESTAMPDIFF(YEAR,DOB,CURDATE())>=25 AND (PROF1='C' OR PROF2='C');

-- 32
SELECT NAME, DOB FROM PROGRAMMER
WHERE DAYOFYEAR(DOB) BETWEEN DAYOFYEAR(CURDATE()) AND DAYOFYEAR(CURDATE() + INTERVAL 7 DAY);

-- 33
SELECT * FROM PROGRAMMER WHERE TIMESTAMPDIFF(YEAR,DOJ,CURDATE())<1;

-- 34
SELECT * FROM PROGRAMMER WHERE TIMESTAMPDIFF(YEAR,DOJ,CURDATE()) = 2;

-- 35
SELECT NAME,TITLE,DCOST-(SCOST*SOLD) AS AmountToBeRecovered FROM SOFTWARE WHERE SCOST*SOLD < DCOST;

-- 36
SELECT * FROM SOFTWARE WHERE SOLD=0;

-- 37
SELECT SCOST FROM SOFTWARE WHERE NAME='MARY';

-- 38
SELECT DISTINCT SPLACE AS ListOfInstitutes FROM STUDIES;

-- 39
SELECT COUNT(DISTINCT COURSE) FROM STUDIES;

-- 40
SELECT NAME FROM PROGRAMMER WHERE NAME LIKE '%A%A%' ;

-- 41
SELECT NAME FROM PROGRAMMER WHERE LENGTH(NAME) <= 5;

-- 42
SELECT COUNT(*) FROM PROGRAMMER 
WHERE SEX='F' AND (PROF1='COBOL' OR PROF2='COBOL') AND (TIMESTAMPDIFF(YEAR,DOJ,CURDATE())>=0);

-- 43
SELECT MIN(LENGTH(NAME)) FROM PROGRAMMER;

-- 44
SELECT AVG(DCOST) FROM SOFTWARE WHERE DEV_IN='COBOL';

-- 45
SELECT NAME,SEX, 
SUBSTR(DOB,1,2) || '/' || SUBSTR(DOB,4,3) ||'/'|| SUBSTR(DOB,8,2) AS DOB,
SUBSTR(DOJ,1,2) || '/' || SUBSTR(DOJ,4,3) || '/' || SUBSTR(DOJ,8,2) AS DOJ
FROM PROGRAMMER;

-- 46
SELECT * FROM PROGRAMMER WHERE DAY(LAST_DAY(DOB))=DAY(DOB);

-- 47 
SELECT SALARY FROM PROGRAMMER WHERE SEX='M' AND (PROF1 NOT IN ('COBOL') AND PROF2 NOT IN('COBOL'));

-- 48
SELECT TITLE, SCOST, DCOST, DCOST-SCOST AS COSTDIFFERENCE
FROM SOFTWARE ORDER BY COSTDIFFERENCE DESC;

-- 49
SELECT NAME,DOB,DOJ FROM PROGRAMMER WHERE MONTH(DOB)=MONTH(DOJ);

-- 50
SELECT * FROM SOFTWARE WHERE TITLE LIKE '% %';

-- QUERIES - II 
-- 1
SELECT DEV_IN AS Langauge, COUNT(TITLE) AS NO_OF_PACKAGE FROM SOFTWARE GROUP BY DEV_IN;

-- 2
SELECT NAME, COUNT(*) FROM SOFTWARE GROUP BY NAME;

-- 3
SELECT SEX,COUNT(*) FROM PROGRAMMER GROUP BY SEX;

-- 4
SELECT DEV_IN, MAX(SCOST), MAX(DCOST) FROM SOFTWARE GROUP BY DEV_IN;

-- 5
SELECT YEAR(DOB),COUNT(*) FROM PROGRAMMER GROUP BY YEAR(DOB);

-- 6
SELECT YEAR(DOJ),COUNT(*) FROM PROGRAMMER GROUP BY YEAR(DOJ);

-- 7
SELECT MONTH(DOB),COUNT(*) FROM PROGRAMMER GROUP BY MONTH(DOB);

-- 8
SELECT MONTH(DOJ),COUNT(*) FROM PROGRAMMER GROUP BY MONTH(DOJ);

-- 9
SELECT PROF1,COUNT(*) FROM PROGRAMMER GROUP BY PROF1;

-- 10
SELECT PROF2,COUNT(*) FROM PROGRAMMER GROUP BY PROF2;

-- 11
SELECT SALARY,COUNT(*) FROM PROGRAMMER GROUP BY SALARY ORDER BY SALARY DESC;

-- 12
SELECT SPLACE AS INSTITUTE, COUNT(*) AS NO_OF_PEOPLE_STUDIEDIN FROM STUDIES GROUP BY SPLACE;

-- 13
SELECT COURSE, COUNT(*) AS STUDIED_IN_EACHCOURSE FROM STUDIES GROUP BY COURSE;

-- 14
SELECT DEV_IN AS LANGUAGE , SUM(DCOST) AS TOTALCOST FROM SOFTWARE GROUP BY DEV_IN;

-- 15
SELECT DEV_IN AS LANGUAGE , SUM(SCOST) AS SELLINGCOST FROM SOFTWARE GROUP BY DEV_IN;	

-- 16
SELECT NAME , SUM(DCOST) AS TOTALCOST FROM SOFTWARE GROUP BY NAME;

-- 17
SELECT NAME, SUM(SCOST*SOLD) AS SALES_COST FROM SOFTWARE GROUP BY NAME;

-- 18
SELECT NAME, COUNT(TITLE) AS NO_OF_PACKAGE FROM SOFTWARE GROUP BY NAME;

-- 19
SELECT DEV_IN, SUM(SCOST) FROM SOFTWARE GROUP BY DEV_IN;

-- 20
SELECT  NAME, MIN(DCOST),MAX(DCOST) FROM SOFTWARE GROUP BY NAME;

-- 21
SELECT DEV_IN, AVG(DCOST) AS AVG_DEV_COST, AVG(SCOST) AS AVG_COST, AVG(SCOST) AS SELLING_COST FROM SOFTWARE GROUP BY DEV_IN;

-- 22
SELECT SPLACE AS INSTITUTE, COUNT(COURSE) AS NO_OF_COURSE, AVG(CCOST) AS COST_PER_COURSE FROM STUDIES GROUP BY SPLACE;

-- 23
SELECT SPLACE AS INSTITUTE, COUNT(NAME) AS  NO_OF_STUDENT FROM STUDIES GROUP BY SPLACE;

-- 24
SELECT  NAME , SEX FROM PROGRAMMER ORDER BY SEX;

-- 25
SELECT NAME, TITLE AS PACKAGE FROM SOFTWARE ORDER BY NAME;

-- 26
SELECT DEV_IN,COUNT(TITLE) FROM SOFTWARE GROUP BY DEV_IN;

-- 27
SELECT DEV_IN,COUNT(TITLE) FROM SOFTWARE WHERE DCOST<10000 GROUP BY DEV_IN ; 

-- 28
SELECT DEV_IN, AVG(DCOST-SCOST) FROM SOFTWARE GROUP BY DEV_IN;

-- 29
SELECT NAME,SUM(SCOST),SUM(DCOST),SUM(DCOST-(SCOST*SOLD)) FROM SOFTWARE GROUP BY NAME HAVING SUM(DCOST)>SUM(SCOST*SOLD);

-- 30
SELECT MAX(SALARY),MIN(SALARY),AVG(SALARY) FROM PROGRAMMER WHERE SALARY>2000;

-- QUERIES - III 
-- 1
SELECT NAME FROM PROGRAMMER WHERE SALARY= (SELECT MAX(SALARY) FROM PROGRAMMER WHERE PROF1='C' OR PROF2='C');

-- 2
SELECT NAME FROM PROGRAMMER WHERE SALARY= (SELECT MAX(SALARY) FROM PROGRAMMER WHERE SEX='F' AND (PROF1='COBOL' OR PROF2='COBOL') );

-- 3
SELECT NAME,PROF1,SALARY FROM PROGRAMMER WHERE (PROF1,SALARY) IN (SELECT PROF1,MAX(SALARY) FROM PROGRAMMER GROUP BY PROF1);

-- 4
SELECT NAME FROM PROGRAMMER ORDER BY DOJ ASC LIMIT 1;

-- 5
SELECT NAME FROM PROGRAMMER ORDER BY DOJ DESC LIMIT 1;

-- 6
 SELECT PROF1 AS KNOWNBY_ONLY_ONE_PROGRAMMER FROM PROGRAMMER GROUP BY PROF1 HAVING PROF1 NOT IN (SELECT PROF2 FROM PROGRAMMER) AND COUNT(PROF1)=1
		UNION
 SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING PROF2 NOT IN (SELECT PROF1 FROM PROGRAMMER) AND COUNT(PROF2)=1;

-- 7
SELECT NAME FROM PROGRAMMER WHERE PROF1='DBASE' || PROF2='DBASE' ORDER BY DOB ASC LIMIT 1;

-- 8
SELECT SPLACE AS INSTITUTE_WITH_MORE_STUDENTS FROM STUDIES GROUP BY SPLACE ORDER BY COUNT(NAME) DESC LIMIT 1;

-- 9
SELECT NAME FROM  STUDIES 
WHERE SPLACE= (SELECT SPLACE FROM STUDIES GROUP BY SPLACE ORDER BY COUNT(NAME) DESC LIMIT 1);

-- 10
SELECT NAME FROM PROGRAMMER WHERE ( SEX='F' AND SALARY>3000 AND PROF1 NOT IN ('C','C++','ORACLE','DBASE') AND PROF2 NOT IN ('C','C++','ORACLE','DBASE'));

-- 11
SELECT COURSE FROM STUDIES ORDER BY CCOST DESC LIMIT 1;

-- 12
SELECT COURSE FROM STUDIES GROUP BY COURSE ORDER BY COUNT(NAME) DESC  ;
-- OR 
WITH COURSECOUNT AS ( SELECT COURSE,COUNT(*) AS STUDENTCOUNT FROM STUDIES GROUP BY COURSE),
     MAXCOUNT AS ( SELECT MAX(STUDENTCOUNT) AS MAX_STUDENTCOUNT FROM COURSECOUNT)
SELECT C.COURSE FROM COURSECOUNT C JOIN MAXCOUNT M ON C.STUDENTCOUNT = M.MAX_STUDENTCOUNT;

-- 13
SELECT SPLACE,COURSE,CCOST FROM STUDIES WHERE CCOST< (SELECT AVG(CCOST) FROM STUDIES);

-- 14
SELECT COURSE FROM STUDIES WHERE CCOST=(SELECT MAX(CCOST) FROM STUDIES);

-- 15
WITH COURSECOUNT AS ( SELECT COURSE,COUNT(*) AS STUDENTCOUNT FROM STUDIES GROUP BY COURSE),
     AVGCOUNT AS ( SELECT AVG(STUDENTCOUNT) AS AVG_STUDENTCOUNT FROM COURSECOUNT)
SELECT C.COURSE FROM COURSECOUNT C JOIN AVGCOUNT A ON C.STUDENTCOUNT < A.AVG_STUDENTCOUNT;

-- 16
SELECT SPLACE FROM STUDIES WHERE COURSE IN (WITH COURSECOUNT AS ( SELECT COURSE,COUNT(*) AS STUDENTCOUNT FROM STUDIES GROUP BY COURSE),
     AVGCOUNT AS ( SELECT AVG(STUDENTCOUNT) AS AVG_STUDENTCOUNT FROM COURSECOUNT)
SELECT C.COURSE FROM COURSECOUNT C JOIN AVGCOUNT A ON C.STUDENTCOUNT < A.AVG_STUDENTCOUNT);

-- 17
SELECT COURSE FROM STUDIES WHERE CCOST <= (SELECT AVG(CCOST)+1000 FROM STUDIES) AND CCOST>=(SELECT AVG(CCOST)-1000 FROM STUDIES);

-- 18
SELECT TITLE FROM SOFTWARE WHERE DCOST= (SELECT MAX(DCOST) FROM SOFTWARE);

-- 19
SELECT TITLE FROM SOFTWARE WHERE SCOST=(SELECT MIN(SCOST) FROM SOFTWARE);

-- 20
SELECT NAME FROM SOFTWARE WHERE SOLD=(SELECT MIN(SOLD) FROM SOFTWARE);

-- 21
SELECT DEV_IN FROM SOFTWARE WHERE SCOST*SOLD = (SELECT MAX(SCOST*SOLD) FROM SOFTWARE);

-- 22
SELECT COUNT(*) AS LEAST_DIFF FROM SOFTWARE WHERE (DCOST-SCOST) = (SELECT MIN(DCOST-SCOST) FROM SOFTWARE);

-- 23
SELECT TITLE FROM SOFTWARE WHERE DCOST=(SELECT MAX(DCOST) FROM SOFTWARE);

-- 24
SELECT DEV_IN FROM SOFTWARE GROUP BY DEV_IN HAVING MAX(DEV_IN) = (SELECT MAX(DEV_IN) FROM SOFTWARE);

-- 25
SELECT NAME FROM SOFTWARE GROUP BY NAME HAVING MAX(NAME) = (SELECT MAX(NAME) FROM SOFTWARE);

-- 26
SELECT NAME,DCOST FROM SOFTWARE WHERE DCOST=(SELECT MAX(DCOST) FROM SOFTWARE);

-- 27
SELECT TITLE FROM SOFTWARE WHERE SOLD<(SELECT AVG(SOLD) FROM SOFTWARE);

-- 28
SELECT NAME FROM PROGRAMMER WHERE SEX='F' AND SALARY >=(SELECT MAX(SALARY) FROM PROGRAMMER);

-- 29
SELECT PROF1 FROM PROGRAMMER HAVING PROF1 = (SELECT MAX(PROF1) FROM PROGRAMMER);

-- 30
SELECT NAME,TITLE,(SCOST*SOLD),DCOST FROM SOFTWARE WHERE (SCOST*SOLD) >= 2*DCOST;

-- 31
SELECT P.NAME,S.DEV_IN,MIN(S.SOLD) AS CHEAPEST_PACKAGE
FROM PROGRAMMER P INNER JOIN SOFTWARE S ON P.NAME=S.NAME
GROUP BY P.NAME,S.DEV_IN;

-- 32
SELECT * FROM PROGRAMMER WHERE SEX='M' AND DOB BETWEEN '1965-01-01' AND '1965-12-31' ORDER BY DOB DESC;

-- 33
SELECT NAME, DEV_IN FROM SOFTWARE WHERE SOLD IN (SELECT MAX(SOLD) FROM SOFTWARE GROUP BY NAME) 
       UNION
SELECT NAME, DEV_IN FROM SOFTWARE WHERE SOLD IN (SELECT MIN(SOLD) FROM SOFTWARE GROUP BY NAME);   
 
 -- 34
SELECT * FROM PROGRAMMER WHERE SEX='F' AND YEAR(DOJ)=1992 ORDER BY DOB ASC LIMIT 1;

-- 35
SELECT MAX(YEAR(DOB)) AS MOST_PORGRAMMER_BORN_ON FROM PROGRAMMER;

-- 36
SELECT MAX(MONTH(DOJ)) AS MOST_PORGRAMMER_BORN_ON FROM PROGRAMMER;

-- 37
SELECT PROF1, COUNT(*) FROM PROGRAMMER GROUP BY PROF1 ORDER BY COUNT(*) DESC LIMIT 1;

-- 38
SELECT * FROM PROGRAMMER WHERE SEX='M' AND SALARY < (SELECT AVG(SALARY) FROM PROGRAMMER WHERE SEX='F');

-- QUERY - IV 

-- 1
SELECT * FROM PROGRAMMER WHERE SALARY IN (SELECT SALARY FROM PROGRAMMER GROUP BY SALARY HAVING COUNT(*)>1);

-- 2
SELECT S.* FROM SOFTWARE S INNER JOIN PROGRAMMER P ON S.NAME=P.NAME WHERE P.SEX='M' AND P.SALARY>3000;

-- 3
SELECT * FROM SOFTWARE S INNER JOIN PROGRAMMER P ON S.NAME=P.NAME WHERE S.DEV_IN='JAVA' AND P.SEX='F';

-- 4
SELECT * FROM PROGRAMMER WHERE YEAR(DOJ)<1990;

-- 5
 SELECT S.* FROM SOFTWARE S 
            JOIN PROGRAMMER P ON S.NAME=P.NAME 
            JOIN STUDIES ST ON S.NAME=ST.NAME
            WHERE P.SEX='F' AND S.DEV_IN='C' AND ST.SPLACE='PRAGATHI';

-- 6
SELECT ST.SPLACE, COUNT(S.TITLE) AS TotalPackages, SUM(S.SOLD) AS TotalSold, AVG(S.SCOST) AS AvgSCost
			FROM SOFTWARE S
			JOIN PROGRAMMER P ON S.NAME = P.NAME
			JOIN STUDIES ST ON S.NAME = ST.NAME
			GROUP BY ST.SPLACE;
            
-- 7
SELECT S.* FROM SOFTWARE S 
		JOIN PROGRAMMER P ON S.NAME=P.NAME
		JOIN STUDIES ST ON S.NAME=ST.NAME
        WHERE S.DEV_IN='DBASE' AND P.SEX='M' AND ST.SPLACE = (SELECT SPLACE FROM STUDIES GROUP BY SPLACE ORDER BY COUNT(*) DESC LIMIT 1);
        
-- 8
SELECT S.*FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME
WHERE (P.SEX='M' AND YEAR(P.DOB)<1965) OR (P.SEX='F' AND YEAR(P.DOB)>1975);

-- 9
SELECT S.* FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME
WHERE DEV_IN != P.PROF1;

-- 10
SELECT S.* FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME
WHERE DEV_IN <> P.PROF1 AND DEV_IN <> P.PROF2;

-- 11
SELECT S.* FROM SOFTWARE S 
            JOIN PROGRAMMER P ON S.NAME=P.NAME 
            JOIN STUDIES ST ON S.NAME=ST.NAME
            WHERE P.SEX='M' AND S.DEV_IN='C' AND ST.SPLACE='SABARI';
            
-- 12
SELECT NAME FROM PROGRAMMER WHERE NAME NOT IN (SELECT DISTINCT NAME FROM SOFTWARE);

-- 13
SELECT SUM(SCOST) FROM SOFTWARE S JOIN STUDIES ST ON S.NAME=ST.NAME WHERE SPLACE='APPLE';

-- 14
SELECT NAME FROM PROGRAMMER WHERE DOJ = (SELECT DOJ FROM PROGRAMMER GROUP BY DOJ HAVING COUNT(*)>1);

-- 15
SELECT NAME FROM PROGRAMMER WHERE PROF2 = (SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING COUNT(*)>1);

-- 16
SELECT ST.SPLACE,SUM(S.SCOST*S.SOLD) FROM SOFTWARE S JOIN STUDIES ST ON S.NAME=ST.NAME GROUP BY ST.SPLACE;

-- 17
SELECT ST.SPLACE,S.DCOST FROM SOFTWARE S JOIN STUDIES ST ON S.NAME=ST.NAME WHERE S.DCOST = (SELECT MAX(DCOST) FROM SOFTWARE ORDER BY DCOST LIMIT 1);

-- 18
SELECT PROF1 FROM PROGRAMMER WHERE PROF1 NOT IN (SELECT DEV_IN FROM SOFTWARE) 
UNION
SELECT PROF2 FROM PROGRAMMER WHERE PROF2 NOT IN (SELECT DEV_IN FROM SOFTWARE) ;

-- 19
SELECT P.NAME,P.SALARY,ST.COURSE FROM PROGRAMMER P JOIN SOFTWARE S ON P.NAME=S.NAME
JOIN STUDIES ST ON P.NAME=ST.NAME WHERE S.SCOST=(SELECT SCOST FROM SOFTWARE ORDER BY SCOST DESC LIMIT 1);

-- 20
SELECT P.NAME, CEIL(ST.CCOST/P.SALARY) AS MONTH_NEEDED_TO_RECOVER FROM PROGRAMMER P JOIN STUDIES ST ON P.NAME=ST.NAME;

-- 21
SELECT S.TITLE FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME 
WHERE (S.DCOST= (SELECT MAX(DCOST) FROM SOFTWARE)) && TIMESTAMPDIFF(YEAR,P.DOJ,CURDATE())>3;

-- 22
SELECT AVG(P.SALARY) FROM PROGRAMMER P JOIN SOFTWARE S ON P.NAME=S.NAME
WHERE (S.SCOST*SOLD)>50000;

-- 23
SELECT COUNT(S.TITLE) FROM SOFTWARE S 
            JOIN PROGRAMMER P ON S.NAME=P.NAME 
            JOIN STUDIES ST ON S.NAME=ST.NAME
            GROUP BY ST.SPLACE HAVING MIN(ST.CCOST)=(SELECT CCOST FROM STUDIES ORDER BY CCOST ASC LIMIT 1);
            
-- 24
SELECT COUNT(S.TITLE),TITLE FROM SOFTWARE S 
            JOIN PROGRAMMER P ON S.NAME=P.NAME 
            JOIN STUDIES ST ON S.NAME=ST.NAME
            WHERE S.DCOST = (SELECT MIN(DCOST) FROM SOFTWARE)
            GROUP BY S.TITLE;
            
-- 25
SELECT COUNT(S.TITLE) FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME
            WHERE P.SEX='F' AND P.SALARY > (SELECT MAX(SALARY) FROM PROGRAMMER WHERE SEX='M');
            
-- 26
SELECT COUNT(S.TITLE) FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME
WHERE TIMESTAMPDIFF(YEAR,P.DOJ,CURDATE()) = (SELECT TIMESTAMPDIFF(YEAR,P.DOJ,CURDATE()) FROM SOFTWARE ORDER BY TIMESTAMPDIFF(YEAR,P.DOJ,CURDATE()) DESC LIMIT 1)
AND (PROF1='BDBS' OR PROF2='BDBS');

-- 27
SELECT S.NAME,ST.SPLACE FROM SOFTWARE S 
JOIN STUDIES ST ON S.NAME=ST.NAME 
WHERE S.NAME NOT IN (SELECT NAME FROM SOFTWARE);

-- 28
SELECT COUNT(*) AS NO_OF_PROGRAMMER, SUM(S.SCOST*S.SOLD-S.DCOST) AS PROFIT 
FROM SOFTWARE S JOIN PROGRAMMER P ON S.NAME=P.NAME
WHERE DEV_IN IN (SELECT PROF1 FROM SOFTWARE) GROUP BY DEV_IN;

-- 29
SELECT NAME,COUNT(TITLE) FROM SOFTWARE GROUP BY NAME;

-- 30
SELECT P.*,S.*,ST.* FROM PROGRAMMER P JOIN SOFTWARE S ON P.NAME=S.NAME JOIN STUDIES ST ON P.NAME=ST.NAME WHERE ST.SPLACE='S.S.I.L';